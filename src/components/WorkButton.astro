---
const { company, position } = Astro.props;

const idLabel = company
  .toLowerCase()
  .replace(/\s/g, "-")
  .replace(/[^a-z0-9-]/g, "");
---

<div data-work-label={idLabel}>
  <button data-button-type="show" type="button">
    <h3>{company}</h3>
    <p>{position}</p>
  </button>
  <dialog id={idLabel}>
    <div>
      <button data-button-type="hide" type="button">
        <span>&#967;</span><span>Close</span>
      </button>
      <p class="company-name" aria-hidden="true">{company}</p>
      <div class="scroller-frame">
        <div class="scroller">
          <div class="container">
            <slot />
          </div>
        </div>
      </div>
    </div>
  </dialog>
</div>

<style>
  [data-work-label] > button {
    display: grid;
    grid-template-columns: repeat(2, auto);
    align-items: baseline;
    justify-items: end;
    column-gap: 1em;

    margin-inline-start: auto;

    border: none;
    transition: opacity 250ms ease-in-out;
  }

  [data-work-label] > button h3 {
    text-align: end;
    grid-area: 1 / 2 / 2 / 3;
  }
  [data-work-label] > button p {
    text-align: end;
    grid-area: 1 / 1 / 2 / 2;
  }
  @media screen and (width < 1200px) {
    [data-work-label] > button {
      grid-template-columns: 1fr;
    }

    [data-work-label] > button h3 {
      grid-area: auto;
    }
    [data-work-label] > button p {
      grid-area: auto;
    }
  }

  dialog {
    --scroll-radius: 1em;

    inset: calc(var(--padding));

    width: calc(100% - (var(--padding) * 2));
    height: calc(100% - (var(--padding) * 2));
    border: none;

    color: inherit;
    background-color: var(--bg-color);
    box-shadow: 2px 2px 2px hsl(var(--neutral-color-900) / 50%);

    z-index: var(--z-work-dialog);

    scrollbar-width: thin;
    scrollbar-color: hsl(var(--primary-color-500)) hsl(0, 0%, 90%, 0.1);

    overflow-y: auto;
  }
  dialog::-webkit-scrollbar {
    width: 0.25em;
  }
  dialog::-webkit-scrollbar-track {
    background: hsl(0, 0%, 50%, 0.25);
    border-radius: var(--scroll-radius);
  }
  dialog::-webkit-scrollbar-thumb {
    background: hsl(var(--primary-color-500));
    border-radius: var(--scroll-radius);
  }
  dialog::-webkit-scrollbar-thumb:hover {
    background: hsl(0, 100%, 50%);
  }

  dialog::backdrop {
    background-color: hsl(0 0% 0% / 50%);
  }
  dialog:focus-visible {
    outline: none;
  }

  dialog > div {
    padding: calc(var(--padding));

    display: grid;
    grid-template-rows: auto 0.25fr 1fr;

    width: 100%;
    height: 100%;

    text-align: left;
  }

  .company-name {
    font-size: var(--fs-large);
    font-weight: var(--fw-thin);

    padding-inline-start: calc(var(--padding) / 2);
    margin-block-start: auto;
    margin-inline: auto;
    width: min(1200px, 100%);
  }

  dialog button {
    text-transform: uppercase;
    text-align: right;
    border: none;
    font-size: var(--fs-small);

    display: flex;
    align-items: center;
    justify-content: end;
    gap: 1ch;

    padding-inline: 1em;
    padding-block: 0.2em;
    margin-inline-start: auto;

    transition: opacity 250ms ease-in-out;
  }
  dialog button:hover {
    opacity: 0.25;
  }

  dialog button span:first-child {
    border: 1px solid var(--border-color);
    padding-inline: 0.2em;
    scale: 1.25 1;
  }

  .scroller-frame {
    position: relative;

    width: 100%;
    height: max-content;
    overflow: hidden;

    isolation: isolate;
  }
  .scroller-frame::before,
  .scroller-frame::after {
    content: "";
    display: block;
    position: absolute;
    inset-block: 0;
    width: 1px;
    height: calc(100% - (var(--padding) + 4px));
    margin-block: calc(var(--padding) / 2);

    background-color: var(--border-color);

    z-index: 10;
  }
  .scroller-frame::before {
    left: 0;
  }
  .scroller-frame::after {
    right: 0;
  }
  .scroller {
    scrollbar-width: thin;
    scrollbar-color: hsl(var(--primary-color-500)) hsl(0, 0%, 90%, 0.1);

    width: 100%;
    padding-block: calc(var(--padding) / 2);
    place-self: center;

    overflow-x: scroll;
    scroll-behavior: smooth;
  }
  .scroller::-webkit-scrollbar {
    block-size: 0.25em;
  }
  .scroller::-webkit-scrollbar-track {
    background: hsl(0, 0%, 50%, 0.25);
    margin-inline: 30vw;
    border-radius: var(--scroll-radius);
  }
  .scroller::-webkit-scrollbar-thumb {
    background: hsl(var(--primary-color-500));
    border-radius: var(--scroll-radius);
  }
  .scroller::-webkit-scrollbar-thumb:hover {
    background: hsl(0, 100%, 50%);
  }

  .scroller > .container {
    display: flex;
    gap: 0.5em;
  }
</style>

<script>
  const body = document.querySelector("body");
  const workItems = Array.from(document.querySelectorAll("[data-work-label]"));

  if (workItems) {
    workItems.forEach((item) => {
      if (item instanceof HTMLElement) {
        const showButton = item.querySelector('[data-button-type="show"]');
        const hideButton = item.querySelector('[data-button-type="hide"]');
        const dialogElement = item.querySelector("dialog");

        showButton.addEventListener("click", () => {
          body.classList.toggle("disable-scroll");
          dialogElement.showModal();
        });

        hideButton.addEventListener("click", () => {
          body.classList.toggle("disable-scroll");
          dialogElement.close();
        });

        dialogElement.addEventListener("cancel", () => {
          body.classList.remove("disable-scroll");
        });
      }
    });
  }
</script>
